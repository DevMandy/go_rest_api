#!groovy

def imageTag = "build-${env.BUILD_NUMBER}"
def imageName = 'homepay/golang_rest_seed'
def image


stage('Build source')
{
    node {

		sh '''#!/bin/bash
		set -x
	    eval "$(ssh-agent -s)"
		echo $JENKINS_HOME
		ssh-add $JENKINS_HOME/.ssh/id_rsa_jenkins'''

        def ginkgo = docker.image('homepay/ginkgo:latest')
        ginkgo.inside {
           sh '''set -x

            eval "$(ssh-agent -s)"
            ssh-add /var/jenkins_home/.ssh/id_rsa_jenkins
            mkdir -p ~/.ssh
            ssh-keyscan -H -t rsa github.com  >> ~/.ssh/known_hosts
            git config --global url."git@github.com:".insteadOf "https://github.com/"

            cd $GOPATH

            go get -v github.com/MyHomePay/golang_rest_seed
            ls

            go build -v github.com/MyHomePay/golang_rest_seed
            cd src/github.com/MyHomePay/golang_rest_seed
            pwd
            ls
            ls /go/bin
            go test
            cp /go/bin/golang_rest_seed /var/jenkins_home/workspace/$JOB_NAME/src/github.com/$GITHUB_REPO/golang_rest_seed
            cp /go/src/github.com/$GITHUB_REPO/golang_rest_seed/Dockerfile /var/jenkins_home/workspace/$JOB_NAME/src/github.com/$GITHUB_REPO/golang_rest_seed
           '''

        }

    }
}

docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {

	stage('Build Docker image') {
	    echo pwd()
		echo "Building docker image"

		dir("src/github.com/$GITHUB_REPO/golang_rest_seed") {
            image = docker.build("${imageName}:${imageTag}")
        }

	}

	stage('Push image to Docker Hub') {
		echo "Pushing image to Docker Hub"

		image.push();
		image.push('latest');
		}
}

stage('Deploy to Joyent') {

	node {
	    input message: 'Are you ready to deploy to Joyent?', ok: 'OK'

	    try {
            sh '''
                eval "$(triton env --docker us-sw-1)"
                set -x
                triton profile list
                docker info
                docker stop golang_rest_seed
            '''

        } catch(e) {

            echo "Error stopping container: ${e}"
        }

         try {
            sh '''
                eval "$(triton env --docker us-sw-1)"
                set -x
                triton profile list
                docker info
                docker rm golang_rest_seed
            '''

        } catch(e) {

            echo "Error removing container: ${e}"
        }

	    try {
            sh '''
                eval "$(triton env --docker us-sw-1)"
                set -x
                triton profile list
                docker info
                docker run -d --name golang_rest_seed -p 8123:8123 $DOCKER_REPO/golang_rest_seed:latest
            '''
        } catch(e) {

            echo "Error deploying to Joyent: ${e}"
        }
	}

}

stage('Notify') {
    slackSend color: 'purple', message: "${imageName}:${imageTag} built and deployed to Joyent"
}

